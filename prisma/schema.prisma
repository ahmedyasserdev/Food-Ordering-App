generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  email        String         @unique
  password     String
  name         String
  image        String?
  phone        String?
  postalCode   String?
  streetAdress String?
  city         String?
  country      String?
  orders       OrderProduct[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  image       String
  basePrice   Float
  sizes       Size[]
   order       Int  
  extras      Extra[]
  orders      OrderProduct[]
  categoryId  String         @db.ObjectId
  category    Category       @relation(fields: [categoryId], references: [id])
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Size {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  name      ProductSizes
  price     Float
  product   Product      @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String       @db.ObjectId
}

model Extra {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  name      ExtraIngredients
  price     Float
  product   Product          @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String           @db.ObjectId
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  order    Int
  products Product[]
}

model Order {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  paid          Boolean        @default(false)
  subTotal      Float
  deliveryFee   Float
  totalPrice    Float
  userEmail     String
  phone         String
  streetAddress String
  postalCode    String
  city        String
  country       String
  products      OrderProduct[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}
   
model OrderProduct {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  quantity Int
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String @db.ObjectId

  user      User?   @relation(fields: [userId], references: [id])
  userId    String? @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
}

enum ProductSizes {
  SMALL
  MEDIUM
  LARGE
}

enum ExtraIngredients {
  CHEESE
  BACON
  TOMATO
  ONION
  PEPPER
}

enum UserRole {
  USER
  ADMIN
}
